{"version":3,"sources":["assets/images/red-bar.svg","assets/images/discordBackground.jpg","assets/images/discord.svg","styles/GlobalStyles.js","firebase.js","components/LoginPage/styles.js","components/LoginPage/index.js","components/Layout/styles.js","components/ServerList/styles.js","components/ServerButton/styles.js","components/ServerButton/index.js","components/ServerList/index.js","components/ServerName/styles.js","components/ServerName/index.js","components/ChannelInfo/styles.js","components/ChannelInfo/index.js","components/ChannelList/styles.js","components/ChannelButton/styles.js","components/ChannelButton/index.js","components/ChannelList/index.js","components/UserInfo/styles.js","components/UserInfo/index.js","components/UserList/styles.js","components/UserList/index.js","components/ChannelMessage/styles.js","components/ChannelMessage/index.js","components/DateRow/styles.js","components/DateRow/index.js","components/WelcomeMessage/styles.js","components/WelcomeMessage/index.js","components/ChannelData/styles.js","components/ChannelData/index.js","components/AboutModal/styles.js","components/AboutModal/index.js","components/AddChannelModal/styles.js","components/AddChannelModal/index.js","components/AddServerModal/styles.js","components/AddServerModal/index.js","components/EditServerModal/styles.js","components/EditServerModal/index.js","components/LogoutModal/styles.js","components/LogoutModal/index.js","components/Layout/index.js","App.js","index.js"],"names":["module","exports","GlobalStyles","createGlobalStyle","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Container","styled","div","props","img","Form","Header","LoginButton","button","LoginPage","setCurrentUser","setIsUserSignedIn","user","a","firestore","collection","doc","uid","set","name","displayName","photoUrl","photoURL","defaultServers","lastLogin","FieldValue","serverTimestamp","merge","console","error","onSnapshot","snapshot","updatedUser","data","useEffect","auth","onAuthStateChanged","saveUser","then","getUserFullInformation","BackgroundImg","onClick","provider","GoogleAuthProvider","signInWithPopup","h1","Grid","Separator","Button","serverPhoto","hasNotifications","mentions","AddIcon","Add","ServerButton","selected","isHome","isAddServerBtn","className","src","Logo","alt","style","maxWidth","maxHeight","ServerList","currentServer","setCurrentServer","setShowAboutModal","setShowAddServerModal","servers","useState","setServers","unsubscribe","newServers","docs","map","id","FetchServers","server","key","Title","ExpandIcon","ExpandMore","ServerName","setShowEditServerModal","HashtagIcon","Hashtag","Description","span","ChannelInfo","currentChannel","description","Category","AddCategoryIcon","InviteIcon","PersonAdd","SettingsIcon","Settings","ChannelButton","channelName","ChannelList","setCurrentChannel","setShowAddChannelModal","channels","setChannels","orderBy","newChannels","FetchServerChannels","channel","Profile","Avatar","googleProfilePic","UserData","Icons","MicIcon","Mic","HeadphoneIcon","Headset","UserInfo","currentUser","setShowLogoutModal","match","join","slice","RedBar","Role","User","isOffline","profilePic","UserRow","nickname","isBot","isAdmin","UserList","usersInCurrentServer","users","setUsers","updatedUsers","FetchServerUsers","filter","indexOf","offlineUsers","onlineUsers","today","Date","lastWeek","setDate","getDate","toDate","push","length","reduce","prev","curr","e","preventDefault","avatarUrl","Message","sameAuthor","time","Content","ChannelMessage","author","timestamp","content","hasMention","toTimeString","toLocaleDateString","DateRow","date","year","month","day","WelcomeMessage","Messages","InputWrapper","Input","input","InputIcon","AlternateEmail","ChannelData","lastAuthor","messages","setMessages","newMessages","FetchChannelMessages","inputText","setInputText","lastDate","messagesRef","useRef","current","scrollTop","scrollHeight","ref","msg","d1","d2","newDay","getFullYear","getMonth","Fragment","profilePicUrl","text","type","placeholder","value","onChange","target","onKeyPress","messageText","add","catch","saveMessage","motion","IconsGrid","Item","ReactIcon","ReactLogo","StyledComponentsIcon","StyledComponents","FirebaseIcon","Firebase","FramerIcon","Framer","GithubIcon","Github","ChromeIcon","LogoChrome","Footer","isCancel","AboutModal","isVisible","setIsVisible","closeModal","initial","opacity","animate","exit","stopPropagation","y","href","rel","window","open","Label","AddChannelModal","setChannelName","channelDescription","setChannelDescription","maxLength","str","toLowerCase","test","FieldWrapper","SearchIcon","Search","ImagePreview","AddServerModal","serverName","setServerName","serverDescription","setServerDescription","serverPhotoUrl","setServerPhotoUrl","serverPhotoPreview","setServerPhotoPreview","alert","docRef","update","arrayUnion","addServerToFirebase","EditServerModal","UserDetails","LogoutModal","signOut","Layout","showAddChannelModal","showAboutModal","showLogoutModal","showAddServerModal","showEditServerModal","App","isUserLoggedIn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bcd4298.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/red-bar.12426016.svg\";","module.exports = __webpack_public_path__ + \"static/media/discordBackground.fd91131e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/discord.09f27433.svg\";","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n*, button, input {\n  border: 0;\n  outline: 0;\n\n  font-family: 'Roboto', sans-serif;\n}\n\nhtml, body, #root {\n  height: 100%;\n}\n\n:root {\n  --primary: #36393f;\n  --primary-hover: #303338;\n  --secondary: #2f3136;\n  --tertiary: rgb(32,34,37);\n  --quaternary: #292b2f;\n  --quinary: #393d42;\n  --senary: #828386;\n\n  --white: #fff;\n  --gray: #8a8c90;\n  --chat-input: rgb(64,68,75);\n  --symbol: #74777a;\n\n  --notification: #f84a4b;\n  --discord: #6e86d6;\n  --discord-dark: #5a6aa1;\n  --discord-add-btn: #5ed682;\n  --mention-detail: #f9a839;\n  --mention-message: #413f3f;\n\n  --link: #5d80d6;\n\n  --rocketseat: #6633cc;\n}\n`;\n\nexport default GlobalStyles;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyASOLQOgEXwdPJzEPtXVsyJko3TIjnbGAY\",\n  authDomain: \"discount-discord.firebaseapp.com\",\n  databaseURL: \"https://discount-discord.firebaseio.com\",\n  projectId: \"discount-discord\",\n  storageBucket: \"discount-discord.appspot.com\",\n  messagingSenderId: \"640393466356\",\n  appId: \"1:640393466356:web:ced4089621d11b41c3a9a1\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 100%;\n  width: 100%;\n\n  background: url(\"${(props) => props.img}\");\n  z-index: 10;\n\n  position: absolute;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Form = styled.div`\n  width: 600px;\n\n  padding: 20px 26px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  background-color: var(--primary);\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.4);\n  border-radius: 5px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  > h1 {\n    color: var(--white);\n    font-size: 24px;\n  }\n\n  > span {\n    color: var(--gray);\n    font-size: 15px;\n\n    margin-top: 5px;\n  }\n`;\n\nexport const LoginButton = styled.button`\n  padding: 10px 40px;\n  margin-top: 50px;\n\n  color: var(--white);\n  font-size: 18px;\n  font-weight: 400;\n\n  background-color: var(--discord);\n  transition: background-color 200ms;\n  border-radius: 6px;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: var(--discord-dark);\n  }\n`;\n","import React, { useEffect } from \"react\";\n\nimport firebase from \"../../firebase\";\n\nimport BackgroundImg from \"../../assets/images/discordBackground.jpg\";\n\nimport { Container, Form, Header, LoginButton } from \"./styles\";\n\n// TODO: Redesign login page (welcome text, brief explanation)\n\nfunction LoginPage({ setCurrentUser, setIsUserSignedIn }) {\n  function signIn() {\n    // Sign into Firebase using popup auth & Google as the identity provider.\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider);\n  }\n\n  // Saves a new message to your Cloud Firestore database.\n  async function saveUser(user) {\n    // Add a new message entry to the database.\n    try {\n      return firebase\n        .firestore()\n        .collection(\"users\")\n        .doc(user.uid)\n        .set(\n          {\n            name: user.displayName,\n            photoUrl: user.photoURL,\n            defaultServers: [\"SRV00\", \"SRV01\"],\n            uid: user.uid,\n            lastLogin: firebase.firestore.FieldValue.serverTimestamp(),\n          },\n          { merge: true }\n        );\n    } catch (error) {\n      console.error(\"Error adding user to database\", error);\n    }\n  }\n\n  async function getUserFullInformation(user) {\n    try {\n      return firebase\n        .firestore()\n        .collection(\"users\")\n        .doc(user.uid)\n        .onSnapshot((snapshot) => {\n          const updatedUser = snapshot.data();\n\n          setCurrentUser(updatedUser);\n        });\n    } catch (error) {\n      console.error(\"Error in retrieving user information\", error);\n    }\n  }\n\n  useEffect(() => {\n    // Listen to auth state changes.\n    firebase.auth().onAuthStateChanged((user) => {\n      // If user successfully logged-in\n      if (user) {\n        saveUser(user)\n          .then(getUserFullInformation(user))\n          .then(setIsUserSignedIn(true));\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Container img={BackgroundImg}>\n      <Form>\n        <Header>\n          <h1>Welcome back!</h1>\n          <span>It's great to see you again!</span>\n        </Header>\n\n        <LoginButton onClick={signIn}>Login with Google</LoginButton>\n      </Form>\n    </Container>\n  );\n}\n\nexport default LoginPage;\n","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: var(--discord);\n`;\n\n// SL - Server List\n// SN - Server Name\n// CI - Channel Info\n// CL - Channel List\n// CD - Channel Data\n// UL - User List\n// UI - User Info\n\nexport const Grid = styled.div`\n  display: grid;\n  position: relative;\n\n  grid-template-columns: 72px 240px auto 240px;\n  grid-template-rows: 48px auto 52px;\n\n  grid-template-areas:\n    \"SL SN CI CI\"\n    \"SL CL CD UL\"\n    \"SL UI CD UL\";\n\n  height: 100vh;\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  grid-area: SL;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  background-color: var(--tertiary);\n\n  padding: 12px 0;\n\n  max-height: 100vh;\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const Separator = styled.div`\n  height: 2px;\n  width: 32px;\n\n  border-radius: 1px;\n  background-color: var(--secondary);\n\n  margin-bottom: 8px;\n`;\n","import styled from \"styled-components\";\nimport { Add } from \"styled-icons/material\";\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n\n  background: ${(props) =>\n    props.serverPhoto\n      ? `url(${props.serverPhoto}), var(--primary)`\n      : `var(--primary)`};\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center center;\n  /* background-color: var(--primary); */\n  color: var(--white);\n\n  height: 48px;\n  width: 48px;\n  border-radius: 50%;\n\n  margin-bottom: 8px;\n\n  position: relative;\n  cursor: pointer;\n\n  transition: border-radius 200ms, background-color 200ms;\n\n  &.selected,\n  :hover,\n  :active {\n    background-color: var(--discord);\n    border-radius: 15px;\n\n    &.addServer {\n      background: var(--discord-add-btn);\n    }\n\n    > svg {\n      color: var(--white);\n    }\n  }\n\n  &::before {\n    width: 9px;\n    height: 9px;\n    border-radius: 50%;\n\n    position: absolute;\n    left: -17px;\n    transform: translateY(calc(50% - 4.5px));\n\n    background-color: var(--white);\n\n    content: \"\";\n    opacity: ${(props) => (props.hasNotifications ? 1 : 0)};\n\n    transition: opacity 300ms, height 300ms, transform 300ms;\n  }\n\n  &::after {\n    background-color: var(--notification);\n    width: auto;\n    height: 16px;\n\n    padding: 0 4px;\n\n    position: absolute;\n    bottom: -4px;\n    right: -4px;\n\n    border-radius: 12px;\n    border: 4px solid var(--quaternary);\n\n    text-align: right;\n    font-size: 13px;\n    font-weight: bold;\n    color: var(--white);\n\n    content: \"${(props) => props.mentions && props.mentions}\";\n    display: ${(props) =>\n      props.mentions && props.mentions > 0 ? \"inline\" : \"none\"};\n  }\n\n  &.selected::before,\n  &:not(.addServer):hover::before {\n    opacity: 1;\n\n    height: 40px;\n    border-radius: 10px;\n    transform: translateY(calc(50% - 20px));\n  }\n\n  > img {\n    max-width: 30px;\n    max-height: 30px;\n  }\n`;\n\nexport const AddIcon = styled(Add)`\n  width: 25px;\n  height: 25px;\n\n  color: var(--discord-add-btn);\n  transition: color 200ms;\n`;\n","import React from \"react\";\n\nimport Logo from \"../../assets/images/discord.svg\";\nimport { Button, AddIcon } from \"./styles\";\n\nfunction ServerButton(props) {\n  const {\n    selected,\n    isHome,\n    serverPhoto,\n    hasNotifications,\n    mentions,\n    isAddServerBtn,\n    onClick,\n  } = props;\n\n  return (\n    <Button\n      className={`${selected ? \"selected\" : \"\"} ${\n        isAddServerBtn ? \"addServer\" : \"\"\n      }`}\n      isHome={isHome}\n      serverPhoto={serverPhoto}\n      hasNotifications={hasNotifications}\n      mentions={mentions}\n      onClick={onClick}\n    >\n      {isHome && (\n        <img\n          src={Logo}\n          alt=\"Discord logo\"\n          style={{ maxWidth: \"100%\", maxHeight: \"auto\" }}\n        />\n      )}\n\n      {isAddServerBtn && <AddIcon />}\n    </Button>\n  );\n}\n\nexport default ServerButton;\n","import React, { useState, useEffect } from \"react\";\n\nimport firebase from \"../../firebase\";\n\nimport { Container, Separator } from \"./styles\";\nimport ServerButton from \"../ServerButton\";\n\n// TODO: Add a tooltip by the side of the button with the name of the server when hover\n// TODO: Create a About Page / Modal when clicked on Home button\n\nfunction FetchServers() {\n  const [servers, setServers] = useState([]);\n\n  useEffect(() => {\n    const unsubscribe = firebase\n      .firestore()\n      .collection(\"servers\")\n      .onSnapshot((snapshot) => {\n        const newServers = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n\n        setServers(newServers);\n      });\n\n    return () => unsubscribe();\n  }, []);\n\n  return servers;\n}\n\nfunction ServerList({\n  currentServer,\n  setCurrentServer,\n  setShowAboutModal,\n  setShowAddServerModal,\n}) {\n  const servers = FetchServers();\n\n  return (\n    <Container>\n      <ServerButton isHome onClick={() => setShowAboutModal(true)} />\n\n      <Separator />\n\n      {servers.map((server) => {\n        return (\n          <ServerButton\n            key={server.id}\n            selected={currentServer.id === server.id}\n            serverPhoto={server.photoUrl}\n            onClick={() => setCurrentServer(server)}\n            // hasNotifications\n          />\n        );\n      })}\n\n      <ServerButton\n        isAddServerBtn\n        onClick={() => setShowAddServerModal(true)}\n      />\n    </Container>\n  );\n}\n\nexport default ServerList;\n","import styled from \"styled-components\";\nimport { ExpandMore } from \"styled-icons/material\";\n\nexport const Container = styled.div`\n  grid-area: SN;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: 0 16px;\n  background-color: var(--secondary);\n\n  /* box-shadow: rgba(0, 0, 0, 0.2) 0 1px 0 0; */\n  /* z-index: 2; */\n  border-bottom: 1px solid var(--quaternary);\n`;\n\nexport const Title = styled.h1`\n  font-size: 16px;\n  font-weight: bold;\n\n  color: var(--white);\n`;\n\nexport const ExpandIcon = styled(ExpandMore)`\n  width: 28px;\n  height: 28px;\n\n  color: var(--white);\n  cursor: pointer;\n`;\n","import React from \"react\";\n\nimport { Container, Title, ExpandIcon } from \"./styles\";\n\n// TODO: Add a modal with the option of leaving currentserver (not allowed to leave the default ones)\n// TODO: Modal should also have the option to invite people in or kick people off\nfunction ServerName({ currentServer, setShowEditServerModal }) {\n  return (\n    <Container>\n      <Title>{currentServer.name}</Title>\n\n      <ExpandIcon onClick={() => setShowEditServerModal(true)} />\n    </Container>\n  );\n}\n\nexport default ServerName;\n","import styled from \"styled-components\";\nimport { Hashtag } from \"styled-icons/heroicons-outline\";\n\nexport const Container = styled.div`\n  grid-area: CI;\n\n  display: flex;\n  align-items: center;\n\n  padding: 0 16px;\n  background-color: var(--primary);\n  /* box-shadow: rgba(0, 0, 0, 0.2) 0 1px 0 0; */\n  /* z-index: 2; */\n  border-bottom: 1px solid var(--quaternary);\n`;\n\nexport const HashtagIcon = styled(Hashtag)`\n  width: 24px;\n  height: 24px;\n\n  color: var(--symbol);\n`;\n\nexport const Title = styled.h1`\n  margin-left: 9px;\n\n  font-size: 16px;\n  font-weight: bold;\n  color: var(--white);\n`;\n\nexport const Separator = styled.div`\n  height: 24px;\n  width: 1px;\n\n  background-color: var(--white);\n  opacity: 0.2;\n\n  margin: 0 13px;\n`;\n\nexport const Description = styled.span`\n  font-size: 16px;\n  color: var(--gray);\n`;\n","import React from \"react\";\n\nimport {\n  Container,\n  HashtagIcon,\n  Title,\n  Separator,\n  Description,\n} from \"./styles\";\n\n// TODO: Add a Github link on top\n\nfunction ChannelInfo({ currentChannel }) {\n  return (\n    <Container>\n      <HashtagIcon />\n      <Title>{currentChannel.name}</Title>\n\n      <Separator />\n\n      <Description>{currentChannel.description}</Description>\n    </Container>\n  );\n}\n\nexport default ChannelInfo;\n","import styled from \"styled-components\";\nimport { Add } from \"styled-icons/material\";\n\nexport const Container = styled.div`\n  grid-area: CL;\n\n  display: flex;\n  flex-direction: column;\n\n  padding: 24px 9.5px 0 16px;\n\n  background-color: var(--secondary);\n`;\n\nexport const Category = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 6px;\n\n  > span {\n    text-transform: uppercase;\n    font-size: 12px;\n    font-weight: 500;\n    color: var(--gray);\n  }\n`;\n\nexport const AddCategoryIcon = styled(Add)`\n  width: 21px;\n  height: 21px;\n\n  color: var(--symbol);\n  transition: color 200ms;\n  cursor: pointer;\n\n  &:hover {\n    color: var(--white);\n  }\n`;\n","import styled from \"styled-components\";\nimport { Hashtag } from \"styled-icons/heroicons-outline\";\nimport { PersonAdd, Settings } from \"styled-icons/material\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  cursor: pointer;\n\n  padding: 8px 3px;\n  margin-bottom: 3px;\n  border-radius: 5px;\n\n  background-color: transparent;\n\n  transition: background-color 200ms;\n\n  > div {\n    display: flex;\n    align-items: center;\n  }\n\n  > div span {\n    margin-left: 5px;\n    color: var(--senary);\n\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n\n  > .channel-options {\n    display: none;\n  }\n\n  &:hover,\n  &.active {\n    background-color: var(--quinary);\n\n    > div span {\n      color: var(--white);\n      max-width: 130px;\n    }\n\n    > .channel-options {\n      display: flex;\n      flex-shrink: 0;\n    }\n  }\n`;\n\nexport const HashtagIcon = styled(Hashtag)`\n  width: 16px;\n  height: 16px;\n\n  color: var(--symbol);\n`;\n\nexport const InviteIcon = styled(PersonAdd)`\n  width: 16px;\n  height: 16px;\n\n  color: var(--symbol);\n  cursor: pointer;\n\n  transition: color 200ms;\n\n  &:hover {\n    color: var(--white);\n  }\n`;\n\nexport const SettingsIcon = styled(Settings)`\n  width: 16px;\n  height: 16px;\n\n  margin-left: 4px;\n\n  color: var(--symbol);\n  cursor: pointer;\n\n  transition: color 200ms;\n\n  &:hover {\n    color: var(--white);\n  }\n`;\n","import React from \"react\";\n\nimport { Container, HashtagIcon, InviteIcon, SettingsIcon } from \"./styles\";\n\nfunction ChannelButton(props) {\n  const { selected, channelName, onClick } = props;\n\n  return (\n    <Container onClick={onClick} className={selected ? \"active\" : \"\"}>\n      <div>\n        <HashtagIcon />\n        <span>{channelName}</span>\n      </div>\n\n      <div className=\"channel-options\">\n        <InviteIcon />\n        <SettingsIcon />\n      </div>\n    </Container>\n  );\n}\n\nexport default ChannelButton;\n","import React, { useState, useEffect } from \"react\";\n\nimport firebase from \"../../firebase\";\n\nimport { Container, Category, AddCategoryIcon } from \"./styles\";\nimport ChannelButton from \"../ChannelButton\";\n\nfunction FetchServerChannels(server) {\n  const [channels, setChannels] = useState([]);\n\n  useEffect(() => {\n    const unsubscribe = firebase\n      .firestore()\n      .collection(\"servers\")\n      .doc(server.id)\n      .collection(\"channels\")\n      .orderBy(\"name\", \"asc\")\n      .onSnapshot((snapshot) => {\n        const newChannels = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n\n        setChannels(newChannels);\n      });\n\n    return () => unsubscribe();\n  }, [server]);\n\n  return channels;\n}\n\n// TODO: Add categories for channels (at least 2: default/welcome channel and the rest)\n// TODO: Add the option to delete the channel (admin only)\n\nfunction ChannelList(props) {\n  const {\n    currentServer,\n    currentChannel,\n    setCurrentChannel,\n    setShowAddChannelModal,\n  } = props;\n  const channels = FetchServerChannels(currentServer);\n\n  return (\n    <Container>\n      <Category>\n        <span>Text Channels</span>\n\n        <AddCategoryIcon onClick={() => setShowAddChannelModal(true)} />\n      </Category>\n\n      {channels.map((channel) => {\n        return (\n          <ChannelButton\n            key={channel.id}\n            selected={currentChannel.id === channel.id}\n            channelName={channel.name}\n            onClick={() => setCurrentChannel(channel)}\n          />\n        );\n      })}\n    </Container>\n  );\n}\n\nexport default ChannelList;\n","import styled from \"styled-components\";\nimport { Mic, Headset, Settings } from \"styled-icons/material\";\n\nexport const Container = styled.div`\n  grid-area: UI;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding: 10px;\n  background-color: var(--quaternary);\n  box-shadow: rgba(0, 0, 0, 0.2) 0 1px 0 0;\n`;\n\nexport const Profile = styled.div`\n  display: flex;\n  align-items: center;\n\n  cursor: pointer;\n  transition: filter 300ms;\n\n  &:hover {\n    filter: brightness(1.2);\n  }\n`;\n\nexport const Avatar = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n\n  background-image: url(${(props) => props.googleProfilePic});\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nexport const UserData = styled.div`\n  margin-left: 8px;\n\n  display: flex;\n  flex-direction: column;\n\n  > strong {\n    color: var(--white);\n    font-size: 13px;\n  }\n\n  > span {\n    color: var(--gray);\n    font-size: 13px;\n  }\n`;\n\nexport const Icons = styled.div`\n  display: flex;\n  align-items: center;\n\n  position: relative;\n\n  > svg:not(:first-child) {\n    margin-left: 7px;\n  }\n\n  > img {\n    width: 20px;\n    height: 20px;\n\n    position: absolute;\n    top: 0px;\n    z-index: 2;\n  }\n\n  > img.mute-mic {\n    left: 7px;\n  }\n\n  > img.mute-audio {\n    left: 33px;\n  }\n`;\n\nexport const MicIcon = styled(Mic)`\n  width: 20px;\n  height: 20px;\n\n  cursor: pointer;\n  color: var(--white);\n  opacity: 0.7;\n\n  transition: opacity 200ms;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const HeadphoneIcon = styled(Headset)`\n  width: 20px;\n  height: 20px;\n\n  cursor: pointer;\n  color: var(--white);\n  opacity: 0.7;\n\n  transition: opacity 200ms;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SettingsIcon = styled(Settings)`\n  width: 20px;\n  height: 20px;\n\n  cursor: pointer;\n  color: var(--white);\n  opacity: 0.7;\n\n  transition: opacity 200ms;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import React from \"react\";\n\nimport RedBar from \"../../assets/images/red-bar.svg\";\n\nimport {\n  Container,\n  Profile,\n  Avatar,\n  UserData,\n  Icons,\n  MicIcon,\n  HeadphoneIcon,\n  SettingsIcon,\n} from \"./styles\";\n\nfunction UserInfo({ currentUser, setShowLogoutModal }) {\n  return (\n    <Container>\n      <Profile onClick={() => setShowLogoutModal(true)}>\n        <Avatar googleProfilePic={currentUser.photoUrl} />\n        <UserData>\n          <strong>{currentUser.name}</strong>\n          <span>#{currentUser.uid.match(/\\d+/g).join(\"\").slice(0, 4)}</span>\n        </UserData>\n      </Profile>\n\n      <Icons>\n        <img className=\"mute-mic\" src={RedBar} alt=\"Mute\" />\n        <MicIcon />\n\n        <img className=\"mute-audio\" src={RedBar} alt=\"Mute\" />\n        <HeadphoneIcon />\n\n        <SettingsIcon onClick={() => setShowLogoutModal(true)} />\n      </Icons>\n    </Container>\n  );\n}\n\nexport default UserInfo;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  grid-area: UL;\n\n  display: flex;\n  flex-direction: column;\n\n  padding: 3px 6px 0 16px;\n  background-color: var(--secondary);\n\n  max-height: calc(100vh - 48px);\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--tertiary);\n    border-radius: 4px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: var(--secondary);\n  }\n`;\n\nexport const Role = styled.span`\n  margin-top: 20px;\n\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 500;\n  color: var(--gray);\n`;\n\nexport const User = styled.div`\n  margin-top: 5px;\n  padding: 5px;\n\n  display: flex;\n  align-items: center;\n\n  cursor: pointer;\n\n  border-radius: 4px;\n  background: transparent;\n  transition: 200ms;\n\n  opacity: ${(props) => (props.isOffline ? \"0.5\" : \"1\")};\n\n  &:hover {\n    background: var(--primary);\n    opacity: 1;\n\n    > strong {\n      opacity: 1;\n    }\n  }\n\n  > strong {\n    margin-left: 13px;\n    font-weight: 400;\n    color: var(--white);\n    font-size: 14px;\n\n    opacity: 0.5;\n    transition: opacity 200ms;\n\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n\n  > span {\n    margin-left: 9px;\n    background-color: var(--discord);\n    color: var(--white);\n    border-radius: 4px;\n    padding: 4px 5px;\n\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 10px;\n\n    &.admin {\n      background-color: var(--notification);\n    }\n  }\n`;\n\nexport const Avatar = styled.div`\n  flex-shrink: 0;\n\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n\n  background-image: url(${(props) => props.profilePic});\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n","import React, { useState, useEffect } from \"react\";\n\nimport firebase from \"../../firebase\";\n\nimport { Container, Role, User, Avatar } from \"./styles\";\n\nfunction UserRow(props) {\n  const { nickname, isBot, isAdmin, profilePic, isOffline, onClick } = props;\n  return (\n    <User isOffline={isOffline} onClick={onClick}>\n      <Avatar profilePic={profilePic} />\n\n      <strong>{nickname}</strong>\n\n      {isBot && <span>Bot</span>}\n      {isAdmin && <span className=\"admin\">Adm</span>}\n    </User>\n  );\n}\n\n// TODO: Pop a modal with each user information when clicked\n// TODO: Create a modal with each user info\n// TODO: Allow user to invites other users to a server through this modal\n\nfunction FetchServerUsers() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const unsubscribe = firebase\n      .firestore()\n      .collection(\"users\")\n      .orderBy(\"name\", \"asc\")\n      .onSnapshot((snapshot) => {\n        const updatedUsers = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n\n        setUsers(updatedUsers);\n      });\n\n    return () => unsubscribe();\n  }, []);\n\n  return users;\n}\n\nfunction UserList({ currentUser, currentServer, setShowLogoutModal }) {\n  const allUsers = FetchServerUsers();\n  const usersInCurrentServer = allUsers.filter((user) => {\n    if (user.defaultServers.indexOf(currentServer.id) > -1) {\n      return true;\n    } else if (user.servers && user.servers.indexOf(currentServer.id) > -1) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n\n  const offlineUsers = [];\n  const onlineUsers = usersInCurrentServer.filter((user) => {\n    if (user.isBot) return true;\n\n    const today = new Date();\n    const lastWeek = today.setDate(today.getDate() - 7);\n    if (user.lastLogin && user.lastLogin.toDate() > lastWeek) return true;\n    else offlineUsers.push(user);\n\n    return false;\n  });\n\n  return (\n    <Container>\n      <Role>Online Recently - {onlineUsers.length}</Role>\n      {onlineUsers.map((user) => {\n        return (\n          <UserRow\n            key={user.id}\n            nickname={user.name}\n            isBot={user.isBot}\n            profilePic={user.photoUrl}\n            isAdmin={\n              user.isAdmin &&\n              user.isAdmin.reduce((prev, curr) => {\n                return prev || curr === currentServer.id;\n              }, false)\n            }\n            onClick={(e) => {\n              user.id === currentUser.uid\n                ? setShowLogoutModal(true)\n                : e.preventDefault();\n            }}\n          />\n        );\n      })}\n\n      <Role>Offline - {offlineUsers.length}</Role>\n      {offlineUsers.map((user) => {\n        return (\n          <UserRow\n            key={user.id}\n            nickname={user.name}\n            isBot={user.isBot}\n            profilePic={user.photoUrl}\n            isOffline\n          />\n        );\n      })}\n    </Container>\n  );\n}\n\nexport default UserList;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  padding: 4px 16px;\n  margin-right: 4px;\n\n  background-color: transparent;\n\n  &:hover {\n    background-color: var(--primary-hover);\n\n    & > div.same-author::before {\n      opacity: 1;\n    }\n  }\n\n  &.mention {\n    background-color: var(--mention-message);\n\n    border-left: 2px solid var(--mention-detail);\n    padding-left: 14px;\n  }\n`;\n\nexport const Avatar = styled.div`\n  width: 40px;\n  height: 40px;\n  margin-top: 13px;\n\n  background-color: var(--secondary);\n  background-image: url(${(props) => props.avatarUrl});\n  background-size: cover;\n  border-radius: 50%;\n\n  &.bot {\n    background-color: var(--mention-detail);\n  }\n\n  &.hide {\n    display: none;\n  }\n`;\n\nexport const Message = styled.div`\n  min-height: ${(props) => (props.sameAuthor ? \"10px\" : \"40px\")};\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  margin-top: 13px;\n  margin-left: 17px;\n\n  position: relative;\n\n  &.same-author {\n    min-height: 10px;\n    margin-top: 0;\n    margin-left: 57px;\n\n    &::before {\n      opacity: 0;\n\n      color: var(--gray);\n      font-size: 12px;\n\n      position: absolute;\n      left: -53px;\n      top: 3px;\n\n      content: \"${(props) => props.time}\";\n    }\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: baseline;\n\n  > strong {\n    color: var(--white);\n    font-size: 15px;\n  }\n\n  > span {\n    margin-left: 9px;\n    background-color: var(--discord);\n    color: var(--white);\n    border-radius: 4px;\n    padding: 4px 5px;\n\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 10px;\n\n    &.admin {\n      background-color: var(--notification);\n    }\n  }\n\n  > time {\n    margin-left: 6px;\n    color: var(--gray);\n    font-size: 11px;\n  }\n\n  &.hide {\n    display: none;\n  }\n`;\n\nexport const Content = styled.div`\n  text-align: left;\n  font-size: 15px;\n  font-weight: 400;\n  color: var(--white);\n`;\n\nexport const Mention = styled.span`\n  color: var(--link);\n  font-weight: 500;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import React from \"react\";\n\nimport { Container, Avatar, Message, Header, Content } from \"./styles\";\nexport { Mention } from \"./styles\";\n\nfunction ChannelMessage(props) {\n  const {\n    author,\n    timestamp,\n    content,\n    avatarUrl,\n    hasMention,\n    isBot,\n    isAdmin,\n    sameAuthor,\n  } = props;\n\n  return (\n    <Container className={hasMention ? \"mention\" : \"\"}>\n      <Avatar\n        className={`${isBot && \"bot\"} ${sameAuthor && \"hide\"}`}\n        avatarUrl={avatarUrl}\n      />\n\n      <Message\n        className={`${sameAuthor && \"same-author\"}`}\n        time={timestamp.toTimeString().match(/(\\d)+:{1}(\\d){2}/)[0]}\n      >\n        <Header className={`${sameAuthor && \"hide\"}`}>\n          <strong>{author}</strong>\n\n          {isBot && <span>Bot</span>}\n          {isAdmin && <span className=\"admin\">Adm</span>}\n\n          <time>{timestamp.toLocaleDateString()}</time>\n        </Header>\n\n        <Content>{content}</Content>\n      </Message>\n    </Container>\n  );\n}\n\nexport default ChannelMessage;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto 1fr;\n  gap: 5px;\n\n  align-items: center;\n\n  width: 100%;\n  padding: 13px;\n  padding-bottom: 6px;\n\n  > span {\n    color: var(--gray);\n    font-size: 11px;\n    font-weight: bold;\n  }\n\n  > hr {\n    width: 100%;\n    height: 1px;\n    border: 0.5px solid var(--chat-input);\n  }\n`;\n","import React from \"react\";\n\nimport { Container } from \"./styles\";\n\nfunction DateRow({ date }) {\n  return (\n    <Container>\n      <hr />\n      <span>\n        {date.toLocaleDateString(\"en\", {\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\",\n        })}\n      </span>\n      <hr />\n    </Container>\n  );\n}\n\nexport default DateRow;\n","import styled from \"styled-components\";\nimport { Hashtag } from \"styled-icons/heroicons-outline\";\n\nexport const Container = styled.div`\n  padding: 4px 16px;\n\n  > h1 {\n    color: var(--white);\n    margin-bottom: 4px;\n  }\n\n  > span {\n    color: var(--gray);\n  }\n`;\n\nexport const HashtagIcon = styled(Hashtag)`\n  width: 62px;\n  height: 62px;\n\n  background-color: var(--symbol);\n  border-radius: 50%;\n\n  color: var(--white);\n  padding: 10px;\n  margin-bottom: 10px;\n`;\n","import React from \"react\";\n\nimport { Container, HashtagIcon } from \"./styles\";\n\nfunction WelcomeMessage({ channelName }) {\n  return (\n    <Container>\n      <HashtagIcon />\n      <h1>Welcome to #{channelName}!</h1>\n      <span>This is the start of #{channelName} channel</span>\n    </Container>\n  );\n}\n\nexport default WelcomeMessage;\n","import styled from \"styled-components\";\nimport { AlternateEmail } from \"styled-icons/material\";\n\nexport const Container = styled.div`\n  grid-area: CD;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  background-color: var(--primary);\n`;\n\nexport const Messages = styled.div`\n  padding: 20px 0;\n\n  display: flex;\n  flex-direction: column;\n\n  max-height: calc(100vh - 46px - 68px);\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--tertiary);\n    border-radius: 4px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: var(--secondary);\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  width: 100%;\n\n  padding: 0 16px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 44px;\n\n  padding: 0 10px 0 57px;\n  border-radius: 7px;\n\n  font-size: 15px;\n  color: var(--white);\n  background-color: var(--chat-input);\n\n  position: relative;\n\n  &::placeholder {\n    color: var(--gray);\n  }\n`;\n\nexport const InputIcon = styled(AlternateEmail)`\n  width: 20px;\n  height: 20px;\n  color: var(--gray);\n\n  position: relative;\n  top: -50%;\n  left: 14px;\n  transition: 200ms ease-in-out;\n`;\n","import React, { useState, useRef, useEffect } from \"react\";\n\nimport firebase from \"../../firebase\";\n\nimport ChannelMessage, { Mention } from \"../ChannelMessage\";\nimport DateRow from \"../DateRow\";\nimport WelcomeMessage from \"../WelcomeMessage\";\n\nimport { Container, Messages, InputWrapper, Input, InputIcon } from \"./styles\";\n\nfunction FetchChannelMessages(server, channel) {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const unsubscribe = firebase\n      .firestore()\n      .collection(\"servers\")\n      .doc(server.id)\n      .collection(\"channels\")\n      .doc(channel.id)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\", \"asc\")\n      .onSnapshot((snapshot) => {\n        const newMessages = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n\n        setMessages(newMessages);\n      });\n\n    return () => unsubscribe();\n  }, [channel, server]);\n\n  return messages;\n}\n\n// TODO: Implement mentions (?)\n// TODO: Format date conditionally (Today, at 10:30 / Yesterday, at 16:22)\n\nfunction ChannelData({ currentUser, currentServer, currentChannel }) {\n  const messages = FetchChannelMessages(currentServer, currentChannel);\n\n  const [inputText, setInputText] = useState(\"\");\n\n  // This variable is used to determine if the ChannelMessage is to be render with or without the author's name and avatar\n  let lastAuthor;\n  let lastDate = new Date(0);\n\n  // Saves a new message to your Cloud Firestore database.\n  function saveMessage(messageText) {\n    // Tests is current user is admin in current server\n    let isAdmin;\n\n    if (currentUser.isAdmin) {\n      isAdmin = currentUser.isAdmin.reduce((prev, curr) => {\n        return prev || curr === currentServer.id;\n      }, false);\n    } else {\n      isAdmin = false;\n    }\n\n    // Add a new message entry to the database.\n    return firebase\n      .firestore()\n      .collection(\"servers\")\n      .doc(currentServer.id)\n      .collection(\"channels\")\n      .doc(currentChannel.id)\n      .collection(\"messages\")\n      .add({\n        author: currentUser.name,\n        text: messageText,\n        profilePicUrl: currentUser.photoUrl,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        isBot: false,\n        isAdmin: isAdmin,\n      })\n      .catch(function (error) {\n        console.error(\"Error writing new message to database\", error);\n      });\n  }\n\n  // This ref and effect will cause the Messages div to scroll to bottom each time a new message is posted or when its first loaded\n  const messagesRef = useRef();\n  useEffect(() => {\n    const div = messagesRef.current;\n\n    if (div) {\n      div.scrollTop = div.scrollHeight;\n    }\n  }, [messages]);\n\n  return (\n    <Container>\n      <Messages ref={messagesRef}>\n        {/* <ChannelMessage\n          author=\"Robocop\"\n          timestamp={new Date(95, 6, 6)}\n          content={\n            <>\n              <Mention>@Rolamento</Mention>, good luck!\n            </>\n          }\n          hasMention\n          isBot\n        /> */}\n\n        <WelcomeMessage channelName={currentChannel.name} />\n\n        {messages.map((msg) => {\n          const newDay = !sameDay(\n            lastDate,\n            msg.timestamp ? msg.timestamp.toDate() : new Date()\n          );\n          lastDate = msg.timestamp ? msg.timestamp.toDate() : new Date();\n\n          const sameAuthor = lastAuthor === msg.author;\n          lastAuthor = msg.author;\n\n          return (\n            <React.Fragment key={msg.id}>\n              {newDay && (\n                <DateRow\n                  date={msg.timestamp ? msg.timestamp.toDate() : new Date()}\n                />\n              )}\n\n              <ChannelMessage\n                author={msg.author}\n                timestamp={msg.timestamp ? msg.timestamp.toDate() : new Date()}\n                avatarUrl={msg.profilePicUrl}\n                content={msg.text}\n                isBot={msg.isBot}\n                isAdmin={msg.isAdmin}\n                sameAuthor={sameAuthor && !newDay}\n              />\n            </React.Fragment>\n          );\n        })}\n      </Messages>\n\n      <InputWrapper>\n        <Input\n          type=\"text\"\n          placeholder={`Conversar em #${currentChannel.name}`}\n          value={inputText}\n          onChange={(e) => setInputText(e.target.value)}\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              saveMessage(inputText);\n              setInputText(\"\");\n            }\n          }}\n        />\n        <InputIcon />\n      </InputWrapper>\n    </Container>\n  );\n}\n\nfunction sameDay(d1, d2) {\n  return (\n    d1.getFullYear() === d2.getFullYear() &&\n    d1.getMonth() === d2.getMonth() &&\n    d1.getDate() === d2.getDate()\n  );\n}\n\nexport default ChannelData;\n","import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport {\n  ReactLogo,\n  Firebase,\n  StyledComponents,\n  Framer,\n  Github,\n} from \"styled-icons/simple-icons\";\n\nimport { LogoChrome } from \"styled-icons/ionicons-solid\";\n\nexport const Container = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n\n  height: 100%;\n  width: 100%;\n\n  background-color: rgba(0, 0, 0, 0.8);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Form = styled(motion.div)`\n  width: 600px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  background-color: var(--primary);\n  border-radius: 6px;\n\n  transition: height 300ms;\n`;\n\nexport const Header = styled.div`\n  width: 100%;\n  padding: 16px;\n\n  align-self: center;\n  justify-self: center;\n\n  > h1 {\n    text-transform: uppercase;\n    color: var(--white);\n    font-size: 20px;\n    text-align: center;\n  }\n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  padding: 16px;\n  margin-bottom: 8px;\n\n  > h1 {\n    text-transform: uppercase;\n    color: var(--white);\n    font-size: 15px;\n  }\n\n  > p {\n    color: var(--white);\n    opacity: 0.8;\n\n    font-weight: 300;\n    font-size: 13px;\n\n    margin-top: 6px;\n\n    > a {\n      color: var(--discord);\n      font-weight: bold;\n    }\n  }\n\n  > h1:not(:first-child) {\n    margin-top: 16px;\n  }\n`;\n\nexport const IconsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: 12px;\n\n  margin: 8px auto 0;\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: auto;\n\n  background-color: var(--secondary);\n  border-radius: 6px;\n\n  padding: 6px 4px;\n\n  > span {\n    color: white;\n    font-size: 13px;\n  }\n`;\nexport const ReactIcon = styled(ReactLogo)`\n  color: white;\n  width: 24px;\n  height: 24px;\n\n  margin-right: 6px;\n`;\n\nexport const StyledComponentsIcon = styled(StyledComponents)`\n  color: white;\n  width: 30px;\n  height: 30px;\n\n  margin-right: 6px;\n`;\n\nexport const FirebaseIcon = styled(Firebase)`\n  color: white;\n  width: 24px;\n  height: 24px;\n\n  margin-right: 6px;\n`;\n\nexport const FramerIcon = styled(Framer)`\n  color: white;\n  width: 24px;\n  height: 24px;\n\n  margin-right: 6px;\n`;\n\nexport const GithubIcon = styled(Github)`\n  color: white;\n  width: 24px;\n  height: 24px;\n\n  margin-right: 6px;\n`;\n\nexport const ChromeIcon = styled(LogoChrome)`\n  color: white;\n  width: 24px;\n  height: 24px;\n\n  margin-right: 6px;\n`;\n\nexport const Footer = styled.div`\n  height: 70px;\n  width: 100%;\n  padding: 16px;\n  margin-top: 8px;\n\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n\n  background-color: var(--secondary);\n  border-bottom-left-radius: 6px;\n  border-bottom-right-radius: 6px;\n`;\n\nexport const Button = styled.button`\n  color: white;\n  font-size: 13px;\n  font-weight: 500;\n\n  border-radius: 6px;\n  background-color: ${(props) =>\n    props.isCancel ? \"transparent\" : \"var(--discord)\"};\n  transition: background-color 200ms;\n\n  padding: 12px 16px;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${(props) =>\n      props.isCancel ? \"transparent\" : \"var(--discord-dark)\"};\n\n    text-decoration: ${(props) => (props.isCancel ? \"underline\" : \"none\")};\n  }\n`;\n","import React from \"react\";\n\nimport { AnimatePresence } from \"framer-motion\";\nimport {\n  Container,\n  Form,\n  Header,\n  Content,\n  IconsGrid,\n  Item,\n  ReactIcon,\n  StyledComponentsIcon,\n  FirebaseIcon,\n  FramerIcon,\n  GithubIcon,\n  ChromeIcon,\n  Footer,\n  Button,\n} from \"./styles\";\n\nfunction AboutModal({ isVisible, setIsVisible }) {\n  function closeModal() {\n    setIsVisible(false);\n  }\n\n  return (\n    <AnimatePresence>\n      {isVisible && (\n        <Container\n          onClick={closeModal}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n        >\n          <Form\n            onClick={(e) => e.stopPropagation()}\n            initial={{ y: 100 }}\n            animate={{ y: 0 }}\n            exit={{ y: 50 }}\n          >\n            <Header>\n              <h1>About Discount Discord</h1>\n            </Header>\n\n            <Content>\n              <h1>What?</h1>\n              <p>\n                This website is a clone of the well known{\" \"}\n                <a\n                  href=\"https://discord.com/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Discord\n                </a>{\" \"}\n                app. It hosts a real time chat application amongst users and\n                tries it's best to replicate the looks and feel of the original\n                app.\n              </p>\n\n              <h1>How?</h1>\n              <p>\n                All of the source code is available on Github. There, you can\n                see a detailed list of each tool used in this application as\n                well as the inner workings of it all.\n              </p>\n\n              <p>That said, here's a summary of the core tech used:</p>\n\n              <IconsGrid>\n                <Item>\n                  <ReactIcon />\n                  <span>React</span>\n                </Item>\n\n                <Item>\n                  <FirebaseIcon />\n                  <span>Firebase</span>\n                </Item>\n\n                <Item>\n                  <StyledComponentsIcon />\n                  <span>Styled Components</span>\n                </Item>\n\n                <Item>\n                  <FramerIcon />\n                  <span>Framer</span>\n                </Item>\n\n                <Item>\n                  <GithubIcon />\n                  <span>Github Pages</span>\n                </Item>\n\n                <Item>\n                  <ChromeIcon />\n                  <span>Chrome DevTools</span>\n                </Item>\n              </IconsGrid>\n\n              <h1>Who?</h1>\n              <p>\n                My name is Pedro Klepa, an electrical engineer by degree and a\n                web developer by passion. I make a bunch of different fun-sized\n                projects like this one as part of my journey in learning modern\n                tools and techniques in web-development.\n              </p>\n\n              <h1>Extras</h1>\n              <p>\n                Special thanks to both{\" \"}\n                <a\n                  href=\"https://www.theodinproject.com/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  TheOdinProject\n                </a>{\" \"}\n                for its great curriculum guided me throughout my learning and{\" \"}\n                <a\n                  href=\"https://github.com/guilhermerodz\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Guilherme Rodz\n                </a>{\" \"}\n                , from RocketSeat, whose work in{\" \"}\n                <a\n                  href=\"https://www.youtube.com/watch?v=x4FdZd2-_uU\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  this tutorial\n                </a>{\" \"}\n                served as the foundation of the work here displayed.\n              </p>\n            </Content>\n\n            <Footer>\n              <Button onClick={closeModal} isCancel>\n                Close\n              </Button>\n              <Button\n                onClick={() => {\n                  window.open(\n                    \"https://github.com/pklepa/discord-clone\",\n                    \"_blank\"\n                  );\n                }}\n              >\n                See Source Code\n              </Button>\n            </Footer>\n          </Form>\n        </Container>\n      )}\n    </AnimatePresence>\n  );\n}\n\nexport default AboutModal;\n","import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nexport const Container = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n\n  height: 100%;\n  width: 100%;\n\n  background-color: rgba(0, 0, 0, 0.8);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Form = styled(motion.div)`\n  width: 400px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  background-color: var(--primary);\n  border-radius: 6px;\n`;\n\nexport const Header = styled.div`\n  width: 100%;\n  padding: 16px;\n  margin-bottom: 8px;\n\n  > h1 {\n    text-transform: uppercase;\n    color: var(--white);\n    font-size: 15px;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  width: 100%;\n  padding: 0 16px;\n`;\n\nexport const Label = styled.div`\n  text-transform: uppercase;\n  color: var(--gray);\n  font-size: 12px;\n  font-weight: 400;\n\n  margin-bottom: 8px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 16px;\n\n  color: var(--white);\n  font-size: 15px;\n\n  background-color: var(--secondary);\n  border: 1px solid transparent;\n  border-radius: 6px;\n\n  &:focus {\n    border: 1px solid var(--discord);\n  }\n`;\n\nexport const Footer = styled.div`\n  height: 70px;\n  width: 100%;\n  padding: 16px;\n  margin-top: 8px;\n\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n\n  background-color: var(--secondary);\n  border-bottom-left-radius: 6px;\n  border-bottom-right-radius: 6px;\n`;\n\nexport const Button = styled.button`\n  color: white;\n  font-size: 13px;\n  font-weight: 500;\n\n  border-radius: 6px;\n  background-color: ${(props) =>\n    props.isCancel ? \"transparent\" : \"var(--discord)\"};\n  transition: background-color 200ms;\n\n  padding: 12px 16px;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${(props) =>\n      props.isCancel ? \"transparent\" : \"var(--discord-dark)\"};\n\n    text-decoration: ${(props) => (props.isCancel ? \"underline\" : \"none\")};\n  }\n`;\n","import React, { useState } from \"react\";\n\nimport firebase from \"../../firebase\";\nimport { AnimatePresence } from \"framer-motion\";\nimport {\n  Container,\n  Form,\n  Header,\n  InputWrapper,\n  Label,\n  Input,\n  Footer,\n  Button,\n} from \"./styles\";\n\nfunction AddChannelModal({ currentServer, isVisible, setIsVisible }) {\n  const [channelName, setChannelName] = useState(\"\");\n  const [channelDescription, setChannelDescription] = useState(\"\");\n\n  // Saves a new channel to Cloud Firestore database.\n  function addChannelToFirebase() {\n    firebase\n      .firestore()\n      .collection(\"servers\")\n      .doc(currentServer.id)\n      .collection(\"channels\")\n      .add({\n        name: channelName || \"new-channel\",\n        description:\n          channelDescription ||\n          \"It's ok Rocky, you can go when you feel like it.\",\n      })\n      .catch(function (error) {\n        console.error(\"Error adding new channel to database\", error);\n      });\n\n    closeModal();\n  }\n\n  function closeModal() {\n    setIsVisible(false);\n    setChannelName(\"\");\n    setChannelDescription(\"\");\n  }\n\n  return (\n    <AnimatePresence>\n      {isVisible && (\n        <Container\n          onClick={closeModal}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n        >\n          <Form\n            onClick={(e) => e.stopPropagation()}\n            initial={{ y: 100 }}\n            animate={{ y: 0 }}\n            exit={{ y: 50 }}\n          >\n            <Header>\n              <h1>Create text channel</h1>\n            </Header>\n\n            <InputWrapper>\n              <Label>Channel name</Label>\n              <Input\n                type=\"text\"\n                maxLength=\"20\"\n                value={channelName}\n                placeholder=\"new-channel\"\n                onChange={(e) => {\n                  const pattern = /[\\w-]/;\n                  const str = e.target.value.toLowerCase();\n\n                  if (pattern.test(str[str.length - 1])) setChannelName(str);\n                }}\n              />\n            </InputWrapper>\n\n            <InputWrapper>\n              <Label>Channel description</Label>\n              <Input\n                type=\"text\"\n                maxLength=\"80\"\n                value={channelDescription}\n                placeholder=\"It's ok Rocky, you can go when you feel like it.\"\n                onChange={(e) => {\n                  setChannelDescription(e.target.value);\n                }}\n              />\n            </InputWrapper>\n\n            <Footer>\n              <Button onClick={closeModal} isCancel>\n                Cancel\n              </Button>\n              <Button onClick={addChannelToFirebase}>Create channel</Button>\n            </Footer>\n          </Form>\n        </Container>\n      )}\n    </AnimatePresence>\n  );\n}\n\nexport default AddChannelModal;\n","import styled from \"styled-components\";\nimport { Search } from \"styled-icons/material\";\nimport { motion } from \"framer-motion\";\n\nexport const Container = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n\n  height: 100%;\n  width: 100%;\n\n  background-color: rgba(0, 0, 0, 0.8);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Form = styled(motion.div)`\n  width: 400px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  background-color: var(--primary);\n  border-radius: 6px;\n\n  transition: height 300ms;\n`;\n\nexport const Header = styled.div`\n  width: 100%;\n  padding: 16px;\n  margin-bottom: 8px;\n\n  > h1 {\n    text-transform: uppercase;\n    color: var(--white);\n    font-size: 15px;\n  }\n`;\n\nexport const FieldWrapper = styled.div`\n  width: 100%;\n  padding: 0 16px;\n`;\n\nexport const Label = styled.div`\n  text-transform: uppercase;\n  color: var(--gray);\n  font-size: 12px;\n  font-weight: 400;\n\n  margin-bottom: 8px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 16px;\n\n  color: var(--white);\n  font-size: 15px;\n\n  background-color: var(--secondary);\n  border: 1px solid transparent;\n  border-radius: 6px;\n\n  &:focus {\n    border: 1px solid var(--discord);\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 1fr 40px;\n  gap: 5px;\n\n  align-items: center;\n  justify-content: center;\n\n  margin-bottom: 16px;\n\n  > input {\n    margin: 0;\n  }\n`;\n\nexport const SearchIcon = styled(Search)`\n  height: 100%;\n  flex-shrink: 0;\n\n  color: white;\n  padding: 10px;\n\n  background-color: var(--discord);\n  border-radius: 6px;\n\n  transition: background 200ms;\n  cursor: pointer;\n\n  &:hover {\n    background-color: var(--discord-dark);\n  }\n`;\n\nexport const ImagePreview = styled.img`\n  width: 100%;\n  max-height: 450px;\n  margin-bottom: 16px;\n\n  border-radius: 8px;\n  background-color: var(--secondary);\n`;\n\nexport const Footer = styled.div`\n  height: 70px;\n  width: 100%;\n  padding: 16px;\n  margin-top: 8px;\n\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n\n  background-color: var(--secondary);\n  border-bottom-left-radius: 6px;\n  border-bottom-right-radius: 6px;\n`;\n\nexport const Button = styled.button`\n  color: white;\n  font-size: 13px;\n  font-weight: 500;\n\n  border-radius: 6px;\n  background-color: ${(props) =>\n    props.isCancel ? \"transparent\" : \"var(--discord)\"};\n  transition: background-color 200ms;\n\n  padding: 12px 16px;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${(props) =>\n      props.isCancel ? \"transparent\" : \"var(--discord-dark)\"};\n\n    text-decoration: ${(props) => (props.isCancel ? \"underline\" : \"none\")};\n  }\n`;\n","import React, { useState } from \"react\";\n\nimport firebase from \"../../firebase\";\nimport { AnimatePresence } from \"framer-motion\";\nimport {\n  Container,\n  Form,\n  Header,\n  FieldWrapper,\n  Label,\n  Input,\n  InputWrapper,\n  SearchIcon,\n  ImagePreview,\n  Footer,\n  Button,\n} from \"./styles\";\n\nfunction AddServerModal({ isVisible, setIsVisible, currentUser }) {\n  const [serverName, setServerName] = useState(\"\");\n  const [serverDescription, setServerDescription] = useState(\"\");\n  const [serverPhotoUrl, setServerPhotoUrl] = useState(\"\");\n  const [serverPhotoPreview, setServerPhotoPreview] = useState(\n    \"https://user-images.githubusercontent.com/22618438/93387614-e792b100-f83f-11ea-86c8-a08b1c850a5e.png\"\n  );\n\n  // Saves a new server to Cloud Firestore database.\n  function addServerToFirebase() {\n    const docRef = firebase.firestore().collection(\"servers\").doc();\n\n    docRef.set({\n      name: serverName || \"New Server\",\n      description: serverDescription || \"A cool place to chat.\",\n      photoUrl: serverPhotoPreview,\n    });\n\n    docRef\n      .collection(\"channels\")\n      .doc(\"CH00\")\n      .set({\n        name: \"welcome\",\n        description: \"testing my async ???\",\n      })\n\n      .then(() => {\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .doc(currentUser.uid)\n          .update({\n            servers: firebase.firestore.FieldValue.arrayUnion(docRef.id),\n            isAdmin: firebase.firestore.FieldValue.arrayUnion(docRef.id),\n          });\n      })\n      .catch(function (error) {\n        console.error(\"Error adding new server to database\", error);\n      });\n\n    closeModal();\n  }\n\n  function closeModal() {\n    setIsVisible(false);\n    setServerName(\"\");\n    setServerDescription(\"\");\n    setServerPhotoUrl(\"\");\n    setServerPhotoPreview(\n      \"https://user-images.githubusercontent.com/22618438/93387614-e792b100-f83f-11ea-86c8-a08b1c850a5e.png\"\n    );\n  }\n\n  return (\n    <AnimatePresence>\n      {isVisible && (\n        <Container\n          onClick={closeModal}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n        >\n          <Form\n            onClick={(e) => e.stopPropagation()}\n            initial={{ y: 100 }}\n            animate={{ y: 0 }}\n            exit={{ y: 50 }}\n          >\n            <Header>\n              <h1>Create new server</h1>\n            </Header>\n\n            <FieldWrapper>\n              <Label>Server name</Label>\n              <Input\n                type=\"text\"\n                maxLength=\"20\"\n                value={serverName}\n                placeholder=\"New Server\"\n                onChange={(e) => {\n                  const pattern = /[\\w- ]/;\n                  const str = e.target.value;\n\n                  if (pattern.test(str[str.length - 1])) setServerName(str);\n                }}\n              />\n            </FieldWrapper>\n\n            <FieldWrapper>\n              <Label>Image URL</Label>\n\n              <InputWrapper>\n                <Input\n                  type=\"text\"\n                  value={serverPhotoUrl}\n                  placeholder={serverPhotoPreview}\n                  onChange={(e) => {\n                    // eslint-disable-next-line no-useless-escape\n                    const pattern = /[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/gi;\n                    const str = e.target.value;\n\n                    if (pattern.test(str)) setServerPhotoUrl(str);\n                    else alert(\"Image must be a valid URL\");\n                  }}\n                />\n\n                <SearchIcon\n                  onClick={() => {\n                    setServerPhotoPreview(serverPhotoUrl);\n                  }}\n                />\n              </InputWrapper>\n\n              <Label>Preview</Label>\n\n              <ImagePreview\n                src={serverPhotoPreview}\n                alt=\"Server photo preview\"\n              />\n            </FieldWrapper>\n\n            <FieldWrapper>\n              <Label>Server description</Label>\n              <Input\n                type=\"text\"\n                maxLength=\"80\"\n                value={serverDescription}\n                placeholder=\"A cool place to chat.\"\n                onChange={(e) => {\n                  setServerDescription(e.target.value);\n                }}\n              />\n            </FieldWrapper>\n\n            <Footer>\n              <Button onClick={closeModal} isCancel>\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  addServerToFirebase();\n                }}\n              >\n                Create server\n              </Button>\n            </Footer>\n          </Form>\n        </Container>\n      )}\n    </AnimatePresence>\n  );\n}\n\nexport default AddServerModal;\n","import styled from \"styled-components\";\nimport { Search } from \"styled-icons/material\";\nimport { motion } from \"framer-motion\";\n\nexport const Container = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n\n  height: 100%;\n  width: 100%;\n\n  background-color: rgba(0, 0, 0, 0.8);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Form = styled(motion.div)`\n  width: 400px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  background-color: var(--primary);\n  border-radius: 6px;\n\n  transition: height 300ms;\n`;\n\nexport const Header = styled.div`\n  width: 100%;\n  padding: 16px;\n  margin-bottom: 8px;\n\n  > h1 {\n    text-transform: uppercase;\n    color: var(--white);\n    font-size: 15px;\n  }\n`;\n\nexport const FieldWrapper = styled.div`\n  width: 100%;\n  padding: 0 16px;\n`;\n\nexport const Label = styled.div`\n  text-transform: uppercase;\n  color: var(--gray);\n  font-size: 12px;\n  font-weight: 400;\n\n  margin-bottom: 8px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 16px;\n\n  color: var(--white);\n  font-size: 15px;\n\n  background-color: var(--secondary);\n  border: 1px solid transparent;\n  border-radius: 6px;\n\n  &:focus {\n    border: 1px solid var(--discord);\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 1fr 40px;\n  gap: 5px;\n\n  align-items: center;\n  justify-content: center;\n\n  margin-bottom: 16px;\n\n  > input {\n    margin: 0;\n  }\n`;\n\nexport const SearchIcon = styled(Search)`\n  height: 100%;\n  flex-shrink: 0;\n\n  color: white;\n  padding: 10px;\n\n  background-color: var(--discord);\n  border-radius: 6px;\n\n  transition: background 200ms;\n  cursor: pointer;\n\n  &:hover {\n    background-color: var(--discord-dark);\n  }\n`;\n\nexport const ImagePreview = styled.img`\n  width: 100%;\n  max-height: 450px;\n  margin-bottom: 16px;\n\n  border-radius: 8px;\n  background-color: var(--secondary);\n`;\n\nexport const Footer = styled.div`\n  height: 70px;\n  width: 100%;\n  padding: 16px;\n  margin-top: 8px;\n\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n\n  background-color: var(--secondary);\n  border-bottom-left-radius: 6px;\n  border-bottom-right-radius: 6px;\n`;\n\nexport const Button = styled.button`\n  color: white;\n  font-size: 13px;\n  font-weight: 500;\n\n  border-radius: 6px;\n  background-color: ${(props) =>\n    props.isCancel ? \"transparent\" : \"var(--discord)\"};\n  transition: background-color 200ms;\n\n  padding: 12px 16px;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${(props) =>\n      props.isCancel ? \"transparent\" : \"var(--discord-dark)\"};\n\n    text-decoration: ${(props) => (props.isCancel ? \"underline\" : \"none\")};\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\n\nimport firebase from \"../../firebase\";\nimport { AnimatePresence } from \"framer-motion\";\nimport {\n  Container,\n  Form,\n  Header,\n  FieldWrapper,\n  Label,\n  Input,\n  InputWrapper,\n  SearchIcon,\n  ImagePreview,\n  Footer,\n  Button,\n} from \"./styles\";\n\nfunction EditServerModal({\n  isVisible,\n  setIsVisible,\n  currentUser,\n  currentServer,\n}) {\n  const [serverName, setServerName] = useState(currentServer.name);\n  const [serverDescription, setServerDescription] = useState(\n    currentServer.description\n  );\n  const [serverPhotoUrl, setServerPhotoUrl] = useState(currentServer.photoUrl);\n  const [serverPhotoPreview, setServerPhotoPreview] = useState(\n    currentServer.photoUrl\n  );\n\n  // Updates server in Cloud Firestore database.\n  function updateServerInFirebase() {\n    const docRef = firebase\n      .firestore()\n      .collection(\"servers\")\n      .doc(currentServer.id);\n\n    docRef\n      .update({\n        name: serverName || \"New Server\",\n        description: serverDescription || \"No description provided\",\n        photoUrl: serverPhotoPreview,\n      })\n      .catch(function (error) {\n        console.error(\"Error editing new server to database\", error);\n      });\n\n    closeModal();\n  }\n\n  function closeModal() {\n    setIsVisible(false);\n  }\n\n  useEffect(() => {\n    setServerName(currentServer.name);\n    setServerDescription(currentServer.description);\n    setServerPhotoUrl(currentServer.photoUrl);\n    setServerPhotoPreview(currentServer.photoUrl);\n  }, [currentServer]);\n\n  return (\n    <AnimatePresence>\n      {isVisible && (\n        <Container\n          onClick={closeModal}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n        >\n          <Form\n            onClick={(e) => e.stopPropagation()}\n            initial={{ y: 100 }}\n            animate={{ y: 0 }}\n            exit={{ y: 50 }}\n          >\n            <Header>\n              <h1>Edit server</h1>\n            </Header>\n\n            <FieldWrapper>\n              <Label>Server name</Label>\n              <Input\n                type=\"text\"\n                maxLength=\"20\"\n                value={serverName}\n                placeholder=\"New Server\"\n                onChange={(e) => {\n                  const pattern = /[\\w- ]/;\n                  const str = e.target.value;\n\n                  if (pattern.test(str[str.length - 1])) setServerName(str);\n                }}\n              />\n            </FieldWrapper>\n\n            <FieldWrapper>\n              <Label>Image URL</Label>\n\n              <InputWrapper>\n                <Input\n                  type=\"text\"\n                  value={serverPhotoUrl}\n                  placeholder={serverPhotoPreview}\n                  onChange={(e) => {\n                    // eslint-disable-next-line no-useless-escape\n                    const pattern = /[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/gi;\n                    const str = e.target.value;\n\n                    if (pattern.test(str)) setServerPhotoUrl(str);\n                    else alert(\"Image must be a valid URL\");\n                  }}\n                />\n\n                <SearchIcon\n                  onClick={() => {\n                    setServerPhotoPreview(serverPhotoUrl);\n                  }}\n                />\n              </InputWrapper>\n\n              <Label>Preview</Label>\n\n              <ImagePreview\n                src={serverPhotoPreview}\n                alt=\"Server photo preview\"\n              />\n            </FieldWrapper>\n\n            <FieldWrapper>\n              <Label>Server description</Label>\n              <Input\n                type=\"text\"\n                maxLength=\"80\"\n                value={serverDescription}\n                placeholder=\"A cool place to chat.\"\n                onChange={(e) => {\n                  setServerDescription(e.target.value);\n                }}\n              />\n            </FieldWrapper>\n\n            <Footer>\n              <Button onClick={closeModal} isCancel>\n                Cancel\n              </Button>\n              <Button\n                onClick={() => {\n                  updateServerInFirebase();\n                }}\n              >\n                Update server information\n              </Button>\n            </Footer>\n          </Form>\n        </Container>\n      )}\n    </AnimatePresence>\n  );\n}\n\nexport default EditServerModal;\n","import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nexport const Container = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n\n  height: 100%;\n  width: 100%;\n\n  background-color: rgba(0, 0, 0, 0.8);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Form = styled(motion.div)`\n  width: 400px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  background-color: var(--primary);\n  border-radius: 6px;\n`;\n\nexport const Header = styled.div`\n  width: 100%;\n  padding: 16px;\n  margin-bottom: 8px;\n\n  > h1 {\n    text-transform: uppercase;\n    color: var(--white);\n    font-size: 15px;\n  }\n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  padding: 0 16px;\n`;\n\nexport const Label = styled.div`\n  text-transform: uppercase;\n  color: var(--gray);\n  font-size: 12px;\n  font-weight: 400;\n\n  margin-bottom: 8px;\n`;\n\nexport const Profile = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 16px;\n\n  background-color: var(--secondary);\n  border-radius: 6px;\n`;\n\nexport const Avatar = styled.div`\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n\n  background-image: url(${(props) => props.googleProfilePic});\n  background-size: cover;\n  background-repeat: no-repeat;\n\n  flex-shrink: 0;\n`;\n\nexport const UserDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  margin-left: 12px;\n\n  > h1 {\n    color: var(--white);\n    font-size: 17px;\n  }\n\n  > span {\n    color: var(--gray);\n    font-size: 14px;\n\n    margin-top: 6px;\n  }\n`;\n\nexport const Footer = styled.div`\n  height: 70px;\n  width: 100%;\n  padding: 16px;\n  margin-top: 8px;\n\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n\n  background-color: var(--secondary);\n  border-bottom-left-radius: 6px;\n  border-bottom-right-radius: 6px;\n`;\n\nexport const Button = styled.button`\n  color: white;\n  font-size: 13px;\n  font-weight: 500;\n\n  border-radius: 6px;\n  background-color: ${(props) =>\n    props.isCancel ? \"transparent\" : \"var(--discord)\"};\n  transition: background-color 200ms;\n\n  padding: 12px 16px;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${(props) =>\n      props.isCancel ? \"transparent\" : \"var(--discord-dark)\"};\n\n    text-decoration: ${(props) => (props.isCancel ? \"underline\" : \"none\")};\n  }\n`;\n","import React from \"react\";\n\nimport firebase from \"../../firebase\";\nimport { AnimatePresence } from \"framer-motion\";\nimport {\n  Container,\n  Form,\n  Header,\n  Content,\n  Label,\n  Profile,\n  Avatar,\n  UserDetails,\n  Footer,\n  Button,\n} from \"./styles\";\n\nfunction LogoutModal({\n  currentUser,\n  isVisible,\n  setIsVisible,\n  setIsUserSignedIn,\n}) {\n  function closeModal() {\n    setIsVisible(false);\n  }\n\n  function signOut() {\n    // Sign out of Firebase.\n    firebase.auth().signOut();\n    setIsUserSignedIn(false);\n    closeModal();\n  }\n\n  return (\n    <AnimatePresence>\n      {isVisible && (\n        <Container\n          onClick={closeModal}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n        >\n          <Form\n            onClick={(e) => e.stopPropagation()}\n            initial={{ y: 100 }}\n            animate={{ y: 0 }}\n            exit={{ y: 50 }}\n          >\n            <Header>\n              <h1>Sign out</h1>\n            </Header>\n\n            <Content>\n              <Label>Currently signed in as</Label>\n              <Profile>\n                <Avatar googleProfilePic={currentUser.photoUrl} />\n\n                <UserDetails>\n                  <h1>{currentUser.name}</h1>\n                  <span>\n                    #{currentUser.uid.match(/\\d+/g).join(\"\").slice(0, 4)}\n                  </span>\n                </UserDetails>\n              </Profile>\n            </Content>\n\n            <Footer>\n              <Button onClick={closeModal} isCancel>\n                Cancel\n              </Button>\n              <Button onClick={signOut}>Sign out</Button>\n            </Footer>\n          </Form>\n        </Container>\n      )}\n    </AnimatePresence>\n  );\n}\n\nexport default LogoutModal;\n","import React, { useState } from \"react\";\n\nimport { Grid } from \"./styles\";\nimport ServerList from \"../ServerList\";\nimport ServerName from \"../ServerName\";\nimport ChannelInfo from \"../ChannelInfo\";\nimport ChannelList from \"../ChannelList\";\nimport UserInfo from \"../UserInfo\";\nimport UserList from \"../UserList\";\nimport ChannelData from \"../ChannelData\";\nimport AboutModal from \"../AboutModal\";\nimport AddChannelModal from \"../AddChannelModal\";\nimport AddServerModal from \"../AddServerModal\";\nimport EditServerModal from \"../EditServerModal\";\nimport LogoutModal from \"../LogoutModal\";\n\nfunction Layout({ currentUser, setIsUserSignedIn }) {\n  const [currentServer, setCurrentServer] = useState({\n    name: \"Discount Discord\",\n    id: \"SRV00\",\n    description: \"It's just like Discord, but cheaper.\",\n    photoUrl:\n      \"https://dygtyjqp7pi0m.cloudfront.net/i/8426/9789666_2.jpg?v=8CD1743E15E9DB0\",\n  });\n  const [currentChannel, setCurrentChannel] = useState({\n    id: \"CH00\",\n    name: \"welcome\",\n    description: \"Say hello!\",\n  });\n\n  const [showAddChannelModal, setShowAddChannelModal] = useState(false);\n  const [showAboutModal, setShowAboutModal] = useState(true);\n  const [showLogoutModal, setShowLogoutModal] = useState(false);\n  const [showAddServerModal, setShowAddServerModal] = useState(false);\n  const [showEditServerModal, setShowEditServerModal] = useState(false);\n\n  return (\n    <Grid>\n      <ServerList\n        setShowAboutModal={setShowAboutModal}\n        setShowAddServerModal={setShowAddServerModal}\n        currentServer={currentServer}\n        setCurrentServer={(server) => {\n          setCurrentServer(server);\n          setCurrentChannel({\n            id: \"CH00\",\n            name: \"welcome\",\n            description: \"Say hello!\",\n          });\n        }}\n      />\n\n      <ServerName\n        currentServer={currentServer}\n        setShowEditServerModal={setShowEditServerModal}\n      />\n\n      <ChannelInfo currentChannel={currentChannel} />\n\n      <ChannelList\n        currentServer={currentServer}\n        currentChannel={currentChannel}\n        setCurrentChannel={setCurrentChannel}\n        setShowAddChannelModal={setShowAddChannelModal}\n      />\n\n      <UserInfo\n        currentUser={currentUser}\n        setShowLogoutModal={setShowLogoutModal}\n      />\n\n      <ChannelData\n        currentUser={currentUser}\n        currentServer={currentServer}\n        currentChannel={currentChannel}\n      />\n\n      <UserList\n        currentServer={currentServer}\n        currentUser={currentUser}\n        setShowLogoutModal={setShowLogoutModal}\n      />\n\n      <AboutModal isVisible={showAboutModal} setIsVisible={setShowAboutModal} />\n\n      <AddServerModal\n        currentUser={currentUser}\n        isVisible={showAddServerModal}\n        setIsVisible={setShowAddServerModal}\n      />\n\n      <EditServerModal\n        currentServer={currentServer}\n        isVisible={showEditServerModal}\n        setIsVisible={setShowEditServerModal}\n      />\n\n      <AddChannelModal\n        currentServer={currentServer}\n        isVisible={showAddChannelModal}\n        setIsVisible={setShowAddChannelModal}\n      />\n\n      <LogoutModal\n        currentUser={currentUser}\n        isVisible={showLogoutModal}\n        setIsVisible={setShowLogoutModal}\n        setIsUserSignedIn={setIsUserSignedIn}\n      />\n    </Grid>\n  );\n}\n\nexport default Layout;\n","import React, { useState } from \"react\";\n\nimport GlobalStyles from \"./styles/GlobalStyles\";\nimport LoginPage from \"./components/LoginPage\";\nimport Layout from \"./components/Layout\";\n\nfunction App() {\n  const [isUserLoggedIn, setIsUserSignedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(false);\n\n  return (\n    <>\n      <GlobalStyles />\n\n      {isUserLoggedIn && currentUser ? (\n        <Layout\n          currentUser={currentUser}\n          setIsUserSignedIn={setIsUserSignedIn}\n        />\n      ) : (\n        <LoginPage\n          setCurrentUser={setCurrentUser}\n          setIsUserSignedIn={setIsUserSignedIn}\n        />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}